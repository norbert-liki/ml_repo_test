steps:
  # Install library  
  - id: 'install'
    name: 'python:3.7-slim'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'pip install -r requirements.txt pip install -e . '
  # Run static python code check    
  - id: 'python-linter-check'
    name: 'python:3.7-slim'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'flake8 --ignore=E501 --exit-zero ml_repo_test/'
    waitFor: 'install'
  # run unit tests for Python functions
  - id: 'python-unit-tests'
    name: 'python:3.7-slim'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'python -B -m pytest ml_repo_test/tests'
    waitFor: 'install'
  # Testing of notebooks in 4 step. Remove if there isn't any notebooks
  - id: 'Read all notebooks'
    name: 'python:3.7-slim'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'nbdev_read_nbs'
    waitFor: 'install'
  - id: 'Check if all notebooks are cleaned'
    name: 'python:3.7-slim'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi && nbdev_clean_nbs && git status -s # display the status to see which nbs need cleaning up && if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi'
    waitFor: 'install'
  - id: 'Check if there is no diff library/notebooks'
    name: 'python:3.7-slim'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi'
    waitFor: 'install'
  - id: 'Check if there is no diff library/notebooks'
    name: 'python:3.7-slim'
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'nbdev_test_nbs'
    waitFor: 'install'